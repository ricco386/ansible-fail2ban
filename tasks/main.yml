---
- name: Include OS-specific variables
  include_vars: ../defaults/{{ ansible_distribution }}.yml
  tags:
    - fail2ban
    - variables
    - install

- include: epel.yml
  when: ansible_distribution == "CentOS" or ansible_distribution == "RedHat" or ansible_distribution == "Fedora"

- name: Install fail2ban packages via YUM. (old CentOS/RedHat/Fedora)
  yum:
    name: "{{ fail2ban_packages }}"
    state: present
  retries: 5
  delay: 10
  become: true
  when: ((ansible_distribution == "CentOS" or ansible_distribution == "RedHat") and ansible_distribution_major_version|int <= 7) or (ansible_distribution == "Fedora" and ansible_distribution_major_version|int <= 21)
  tags:
    - fail2ban
    - install

- name: Install fail2ban packages via DNF. (CentOS/RedHat/Fedora)
  dnf:
    name: "{{ fail2ban_packages }}"
    state: present
  retries: 5
  delay: 10
  become: true
  when: ((ansible_distribution == "CentOS" or ansible_distribution == "RedHat") and ansible_distribution_major_version|int >= 8) or (ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 22)
  tags:
    - fail2ban
    - install

- name: Install fail2ban packages via APT. (Debian/Ubuntu/Raspbian)
  apt:
    name: "{{ fail2ban_packages }}"
    state: present
    install_recommends: no
  retries: 5
  delay: 10
  become: true
  when: ansible_os_family == "Debian"
  tags:
    - fail2ban
    - install

- name: Create fail2ban configuration file
  template: src=jail.local.j2
            dest={{ fail2ban_config_dir }}/jail.local
            owner=root
            group=root
            mode=0644
  become: true
  notify: restart fail2ban
  tags:
    - fail2ban
    - config

- name: Start fail2ban and enable at boot
  systemd: name={{ fail2ban_service }} enabled=yes state=started  # Only available in Ansible > 2.2
  become: true
  tags:
    - fail2ban
    - config

- name: Collect all banned SSH IPs
  shell: fail2ban-client status sshd
  register: fail2ban_sshd_results
  become: yes
  tags:
    - fail2ban
    - results

- name: Show all banned SSH IPs
  debug: var=fail2ban_sshd_results.stdout_lines
  tags:
    - fail2ban
    - results
